const cloudinary = require('cloudinary').v2;
const express = require('express');
const router = express.Router();
const Url = require('../models/qr');
const path = require("path");
const multer = require("multer");

const {verifyUser, verifyAdmin, authMiddleware} = require('./verifyToken');

router.use(authMiddleware);

router.get('/', verifyUser,async(req, res) => {
    const resources = await Url.findAll();
    res.json(resources);
});



const storage = multer.diskStorage({
   destination: function (req, file, cb) {
    cb(null, 'public')
  },
   filename: function(req, file, cb){
      cb(null,"IMAGE-" + Date.now() + path.extname(file.originalname));
   }
});

const upload = multer({
   storage: storage,
   limits:{fileSize: 1000000},
}).single('file');

router.post("/upload", verifyUser,(req, res) => {
    upload(req, res, (err)=>{
      console.log("Request ---", req.body);
      console.log("Request file ---", req.file);//Here you get file.
      console.log(req.file);
      if(!err)
        cloudinary.uploader.upload(req.file.path, async(err, image)=>{
            console.log();
            console.log("** File Upload");
            if (err) { console.warn(err); }
            console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
            console.log("* " + image.public_id);
            console.log("* " + image.url);
            const newUrl = await Url.create({
                url:image.url
            });
            res.json(newUrl);
        })
      else{
          console.log(err);
      }
   })
});


module.exports = router;